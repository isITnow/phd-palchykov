{"version":3,"file":"static/js/68.3b961b18.chunk.js","mappings":"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","sources":["assets/utils/formateDate.js","assets/utils/setPageTitle.js","components/FormComponents/CustomTextArea.jsx","webpack://phd-palchykov/./src/components/Posts/post.module.css?12d6","components/Posts/Post.jsx","components/Posts/PostForm.jsx","components/shared/BackBtn.jsx","components/shared/Section.jsx","components/Comments/Comment.jsx","components/Comments/CommentsList.jsx","components/Comments/CommentsListTitle.jsx","components/Comments/CommentForm.jsx","pages/PostPage.jsx","redux/posts/selectorPosts.js"],"sourcesContent":["import moment from \"moment\";\n\nconst formateDate = (entity) => {\n  const postedDate = moment(entity.created_at).fromNow();\n  const editedDate = moment(entity.updated_at).fromNow();\n  const isEdited = entity.updated_at > entity.created_at;\n  return { postedDate, editedDate, isEdited };\n};\n\nexport default formateDate;\n","const setPageTitle = (pageTitle) => {\n  const baseTitle = \"Prof. Dr. Palchykov\";\n  if (pageTitle) {\n    return (document.title = `${pageTitle} | ${baseTitle}`);\n  }\n\n  return (document.title = baseTitle);\n};\n\nexport default setPageTitle;\n","import { useField } from \"formik\";\nimport FormWarning from \"./FormWarning\";\n\nconst CustomTextArea = ({ label, ...props }) => {\n  const [field, meta] = useField(props.name);\n  return (\n    <div className=\"mb-3\">\n      <label className=\"form-label px-3 text-secondary fw-bold\">{label}</label>\n      <textarea {...field} {...props} className=\"form-control\" />\n      {meta.touched && meta.error && <FormWarning>{meta.error}</FormWarning>}\n    </div>\n  );\n};\n\nexport default CustomTextArea;\n","// extracted by mini-css-extract-plugin\nexport default {\"hoverEffect\":\"post_hoverEffect__GRfm3\"};","import { Link } from \"react-router-dom\";\n\nimport formateDate from \"../../assets/utils/formateDate\";\n\nimport s from \"./post.module.css\";\n\nconst Post = ({ post, single }) => {\n  const { postedDate, editedDate, isEdited } = formateDate(post);\n\n  const commentsCount = single ? post?.comments?.length : post?.comments;\n  const cardStyle = single ? \"card shadow\" : `${s.hoverEffect} card`;\n\n  return (\n    <div className={cardStyle}>\n      <div className=\"card-header\">\n        <small className=\"text-primary fw-bold\">posted: {postedDate}</small>\n        {isEdited && (\n          <>\n            <span className=\"mx-2\">|</span>\n            <small className=\"text-primary fw-bold\">\n              updated: {editedDate}\n            </small>\n          </>\n        )}\n        {!!commentsCount && (\n          <>\n            <span className=\"mx-2\">|</span>\n            <small className=\"text-primary fw-bold\">\n              comments: {commentsCount}\n            </small>\n          </>\n        )}\n      </div>\n      {single ? (\n        <div className=\"card-body\">\n          <p className=\"card-text\">{post.body}</p>\n        </div>\n      ) : (\n        <Link to={`/posts/${post.id}`} style={{ color: \"inherit\" }}>\n          <div className=\"card-body\">\n            <p className=\"card-text text-truncate\">{post.body}</p>\n          </div>\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n","import { Form, Formik } from \"formik\";\n\nimport { useDispatch } from \"react-redux\";\nimport {\n  addPostThunk,\n  updatePostThunk,\n} from \"../../redux/posts/operationsPosts\";\n\nimport CustomTextArea from \"../FormComponents/CustomTextArea\";\nimport SubmitBtn from \"../shared/SubmitBtn\";\nimport { validation } from \"../../assets/utils/validationSchema\";\n\nconst PostForm = ({ post, status }) => {\n  const dispatch = useDispatch();\n  const isNewItem = !post;\n\n  const handleSubmit = async (values, actions) => {\n    const { body } = values;\n\n    const formData = new FormData();\n    formData.append(\"post[body]\", body.trim());\n\n    if (post) {\n      dispatch(updatePostThunk({ id: post.id, post: formData }));\n    } else {\n      dispatch(addPostThunk(formData));\n      actions.resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        body: isNewItem ? \"\" : post.body,\n      }}\n      validationSchema={validation.postSchema}\n      onSubmit={handleSubmit}\n    >\n      {(props) => {\n        const isDisabled = props.isSubmitting || status === \"pending\";\n        const submitBtnText = isNewItem ? \"Create Post\" : \"Update Post\";\n\n        return (\n          <Form>\n            <CustomTextArea\n              label=\"Post text\"\n              name=\"body\"\n              type=\"text\"\n              rows=\"3\"\n            />\n            <div className=\"text-end\">\n              <SubmitBtn text={submitBtnText} disabled={isDisabled} />\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default PostForm;\n","import { useNavigate } from \"react-router-dom\";\n\nconst BackBtn = ({ path, children }) => {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-outline-secondary\"\n      onClick={() => navigate(path)}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default BackBtn;\n","const Section = ({ children }) => {\n  return <section className=\"py-4\">{children}</section>;\n};\n\nexport default Section;\n","import formateDate from \"../../assets/utils/formateDate\";\nimport useSignInStatus from \"../../assets/customHooks/useSignInStatus\";\n\nimport { useDispatch } from \"react-redux\";\nimport { removeCommentThunk } from \"../../redux/comments/operationsComments\";\nimport { useParams } from \"react-router-dom\";\n\nconst Comment = ({ comment }) => {\n  // eslint-disable-next-line no-unused-vars\n  const { postedDate, _, __ } = formateDate(comment);\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const isLoggedIn = useSignInStatus();\n\n  const handleClick = () => {\n    // window.alert(\"Are you sure?\");\n    dispatch(removeCommentThunk({ post_id: id, comment_id: comment.id }));\n  };\n\n  return (\n    <div className=\"py-3\">\n      <span className=\"fw-bold text-primary\">{comment.author}</span>\n      <p className=\"mt-2 text-break\">{comment.body}</p>\n      <div className=\"d-flex justify-content-between\">\n        <small className=\"text-secondary\">{postedDate}</small>\n        {isLoggedIn && (\n          <div className=\"btn btn-sm btn-danger\" onClick={handleClick}>\n            delete\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;\n","import { motion, AnimatePresence } from \"framer-motion\";\nimport Comment from \"./Comment\";\n\nconst listItem = {\n  initial: { opacity: 0, y: -10 },\n  animate: { opacity: 1, y: 0 },\n  exit: { opacity: 0, y: -10 },\n};\n\nconst CommentsList = ({ comments }) => {\n  return (\n    <ul className=\"list-group\">\n      <AnimatePresence>\n        {comments.map((comment) => {\n          return (\n            <motion.li\n              className=\"list-group-item\"\n              key={comment.id}\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"exit\"\n              variants={listItem}\n            >\n              <Comment comment={comment} />\n            </motion.li>\n          );\n        })}\n      </AnimatePresence>\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","const CommentsListTitle = ({ text }) => {\n  return <h3 className=\"text-center text-secondary fw-bold\">{text}</h3>;\n};\n\nexport default CommentsListTitle;\n","import { Form, Formik } from \"formik\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCommentThunk } from \"../../redux/comments/operationsComments\";\nimport { selectUserName } from \"../../redux/auth/selectorAuth\";\n\nimport CustomInput from \"../FormComponents/CustomInput\";\nimport CustomTextArea from \"../FormComponents/CustomTextArea\";\nimport { validation } from \"../../assets/utils/validationSchema\";\n\nconst CommentForm = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const currentUserName = useSelector(selectUserName) || null;\n\n  const handleSubmit = async (values, actions) => {\n    const { body, author } = values;\n\n    const formData = new FormData();\n    formData.append(\"comment[author]\", author.trim());\n    formData.append(\"comment[body]\", body.trim());\n\n    dispatch(addCommentThunk({ post_id: id, comment: formData }));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        author: currentUserName || \"\",\n        body: \"\",\n      }}\n      validationSchema={validation.commentSchema}\n      onSubmit={handleSubmit}\n    >\n      {(props) => (\n        <Form>\n          <CustomInput label=\"Name\" name=\"author\" type=\"text\" bsclass=\"mb-3\" />\n          <CustomTextArea label=\"Comment\" name=\"body\" type=\"text\" rows=\"3\" />\n          <div className=\"text-end\">\n            <button\n              disabled={props.isSubmitting}\n              type=\"submit\"\n              className=\"btn btn-primary\"\n            >\n              Add comment\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CommentForm;\n","import { motion, AnimatePresence } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getOnePostThunk,\n  removePostThunk,\n} from \"../redux/posts/operationsPosts\";\nimport {\n  selectComments,\n  selectError,\n  selectOnePost,\n  selectStatus,\n} from \"../redux/posts/selectorPosts\";\n\nimport Alert from \"../components/shared/Alert\";\nimport { useAlert } from \"../assets/customHooks/useAlert\";\n\nimport BackBtn from \"../components/shared/BackBtn\";\nimport CommentsList from \"../components/Comments/CommentsList\";\nimport CommentsListTitle from \"../components/Comments/CommentsListTitle\";\nimport CommentForm from \"../components/Comments/CommentForm\";\nimport Loader from \"../components/shared/Loader\";\nimport Post from \"../components/Posts/Post\";\nimport PostForm from \"../components/Posts/PostForm\";\nimport Section from \"../components/shared/Section\";\n\nimport setPageTitle from \"../assets/utils/setPageTitle\";\nimport useSignInStatus from \"../assets/customHooks/useSignInStatus\";\n\nconst fadeInOut = {\n  initial: { opacity: 0 },\n  animate: { opacity: 1 },\n  exit: { opacity: 0 },\n};\n\nconst PostPage = () => {\n  setPageTitle(\"Post\");\n\n  const { id } = useParams();\n  const [showForm, setShowForm] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const error = useSelector(selectError);\n  const comments = useSelector(selectComments);\n  const anyComments = !!comments?.length;\n  const post = useSelector(selectOnePost);\n  const status = useSelector(selectStatus);\n\n  const { alert, showAlert } = useAlert();\n  const isLoggedIn = useSignInStatus();\n\n  useEffect(() => {\n    dispatch(getOnePostThunk(id));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    switch (status) {\n      case \"rejected\":\n        showAlert(error, \"danger\");\n        break;\n\n      case \"fulfilled\":\n        showAlert(\"Post updated successfully\", \"success\");\n        setShowForm(false);\n        break;\n\n      case \"removed\":\n        setShowForm(false);\n        navigate(\"/posts\");\n        break;\n\n      case \"comment added\":\n        showAlert(\"Comment published successfully\", \"success\");\n        break;\n\n      case \"comment removed\":\n        setShowForm(false);\n        showAlert(\"Comment deleted\", \"success\");\n        break;\n      default:\n        break;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [status]);\n\n  const handleDelete = () => {\n    // window.alert(\"Are you sure you want to delete post?\");\n    dispatch(removePostThunk(id));\n  };\n\n  if (status === \"loading\") {\n    return <Loader />;\n  }\n\n  return (\n    <Section>\n      <Alert state={alert} />\n      {post && (\n        <>\n          <Post post={post} single />\n          {/* BUTTONS */}\n          <div className=\"mt-3 text-end\">\n            <BackBtn path=\"/posts\">Go back</BackBtn>\n            {isLoggedIn && (\n              <div className=\"btn-group ms-3\">\n                {showForm ? (\n                  <AnimatePresence>\n                    <motion.button\n                      type=\"button\"\n                      key=\"child\"\n                      initial=\"initial\"\n                      animate=\"animate\"\n                      exit=\"exit\"\n                      variants={fadeInOut}\n                      className=\"btn btn-outline-secondary\"\n                      onClick={() => setShowForm(false)}\n                    >\n                      cancel update\n                    </motion.button>\n                  </AnimatePresence>\n                ) : (\n                  <AnimatePresence>\n                    <motion.button\n                      type=\"button\"\n                      key=\"child\"\n                      initial=\"initial\"\n                      animate=\"animate\"\n                      exit=\"exit\"\n                      variants={fadeInOut}\n                      className=\"btn btn-primary\"\n                      onClick={() => setShowForm(true)}\n                    >\n                      edit\n                    </motion.button>\n                  </AnimatePresence>\n                )}\n                <div className=\"btn btn-danger\" onClick={handleDelete}>\n                  delete\n                </div>\n              </div>\n            )}\n          </div>\n          {/* POST FORM */}\n          <AnimatePresence>\n            {showForm && (\n              <motion.div\n                key=\"child\"\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                variants={fadeInOut}\n                className=\"mt-3\"\n              >\n                <PostForm post={post} status={status} />\n              </motion.div>\n            )}\n          </AnimatePresence>\n          {/* COMMENTS */}\n          <CommentForm />\n          <div className=\"mt-3\">\n            <div className=\"mb-3\">\n              <CommentsListTitle\n                text={anyComments ? \"Comments\" : \"No comments\"}\n              />\n            </div>\n            {anyComments && <CommentsList comments={comments} />}\n          </div>\n        </>\n      )}\n    </Section>\n  );\n};\n\nexport default PostPage;\n","export const selectPostsList = (state) => state.posts.postsList;\nexport const selectOnePost = (state) => state.posts.onePost;\nexport const selectError = (state) => state.posts.error;\nexport const selectStatus = (state) => state.posts.status;\nexport const selectComments = (state) => state.posts.onePost?.comments;\n"],"names":["entity","postedDate","moment","created_at","fromNow","editedDate","updated_at","isEdited","pageTitle","baseTitle","document","title","concat","_ref","label","props","_objectWithoutProperties","_excluded","_useField","useField","name","_useField2","_slicedToArray","field","meta","_jsxs","className","children","_jsx","_objectSpread","touched","error","FormWarning","_post$comments","post","single","_formateDate","formateDate","commentsCount","comments","length","cardStyle","s","_Fragment","body","Link","to","id","style","color","status","dispatch","useDispatch","isNewItem","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","actions","formData","wrap","_context","prev","next","FormData","append","trim","updatePostThunk","addPostThunk","resetForm","stop","_x","_x2","apply","arguments","Formik","initialValues","validationSchema","validation","postSchema","onSubmit","isDisabled","isSubmitting","submitBtnText","Form","CustomTextArea","type","rows","SubmitBtn","text","disabled","path","navigate","useNavigate","onClick","comment","_","__","useParams","isLoggedIn","useSignInStatus","author","removeCommentThunk","post_id","comment_id","listItem","initial","opacity","y","animate","exit","AnimatePresence","map","motion","li","variants","Comment","currentUserName","useSelector","selectUserName","addCommentThunk","commentSchema","CustomInput","bsclass","fadeInOut","setPageTitle","_useState","useState","_useState2","showForm","setShowForm","selectError","selectComments","anyComments","selectOnePost","selectStatus","_useAlert","useAlert","alert","showAlert","useEffect","getOnePostThunk","Loader","Section","Alert","state","Post","BackBtn","button","removePostThunk","div","PostForm","CommentForm","CommentsListTitle","CommentsList","selectPostsList","posts","postsList","onePost","_state$posts$onePost"],"sourceRoot":""}