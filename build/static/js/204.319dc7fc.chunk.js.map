{"version":3,"file":"static/js/204.319dc7fc.chunk.js","mappings":"+LAcA,IAXuB,SAAHA,GAA6B,IAAvBC,EAAKD,EAALC,MAAUC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GACvCC,GAAsBC,EAAAA,EAAAA,IAASJ,EAAMK,MAAKC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAnCK,EAAKF,EAAA,GAAEG,EAAIH,EAAA,GAClB,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,yCAAwCC,SAAEb,KAC3Dc,EAAAA,EAAAA,KAAA,YAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAcN,GAAWR,GAAK,IAAEW,UAAU,kBACzCF,EAAKM,SAAWN,EAAKO,QAASH,EAAAA,EAAAA,KAACI,EAAAA,EAAW,CAAAL,SAAEH,EAAKO,UAGxD,C,6CCKA,IAfyB,SAAHlB,GAA8B,IAAxBoB,EAAgBpB,EAAhBoB,iBAC1B,OACER,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qCAAoCC,SAAC,sBAClDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iCAAgCC,SAC3CM,EAAiBC,KAAI,SAACC,EAAaC,GAAK,OACvCR,EAAAA,EAAAA,KAAA,MAAgBF,UAAU,kBAAiBC,SACxCQ,GADMC,EAEJ,QAKf,C,qCCXA,IAJkB,SAAHvB,GAAsB,IAAhBc,EAAQd,EAARc,SACnB,OAAOC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAEA,GAC3C,C,+CCcA,IAdgB,SAAHd,GAA4B,IAAtBwB,EAAIxB,EAAJwB,KAAMV,EAAQd,EAARc,SACjBW,GAAWC,EAAAA,EAAAA,MAEjB,OACEX,EAAAA,EAAAA,KAAA,UACEY,KAAK,SACLd,UAAU,4BACVe,QAAS,kBAAMH,EAASD,EAAK,EAACV,SAE7BA,GAGP,C,qCCJA,IAVc,SAAHd,GAAyB,IAAnBuB,EAAKvB,EAALuB,MAAOM,EAAI7B,EAAJ6B,KACtB,OACEd,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,6CAA4CC,SAAA,GAAAgB,OACtDD,EAAI,KAAAC,OAAIP,EAAQ,MAI5B,C,oCCJA,IAJgB,SAAHvB,GAAsB,IAAhBc,EAAQd,EAARc,SACjB,OAAOC,EAAAA,EAAAA,KAAA,WAASF,UAAU,OAAMC,SAAEA,GACpC,C,sQCuKA,EA5JiB,SAAHd,GAA8B,IAAxB+B,EAAQ/B,EAAR+B,SAAUC,EAAMhC,EAANgC,OACtBC,GAAWC,EAAAA,EAAAA,MACXC,GAAaJ,EAEbK,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAAQC,GAAO,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAV,EAAAA,EAAAA,KAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACjCT,EAAoCF,EAApCE,MAAOC,EAA6BH,EAA7BG,KAAMC,EAAuBJ,EAAvBI,KAAMC,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,OAE5BC,EAAW,IAAIK,UACZC,OAAO,cAAeX,EAAMY,QACrCP,EAASM,OAAO,aAAcV,EAAKW,QACnCP,EAASM,OAAO,aAAcT,EAAKU,QAC/BR,EAAMS,QACRT,EAAMU,SAAQ,SAACC,GACbV,EAASM,OAAO,gBAAiBI,EAAQH,OAC3C,IAEET,GACFE,EAASM,OAAO,cAAeR,GAG7BZ,GACFF,GAAS2B,EAAAA,EAAAA,IAAaX,IACtBN,EAAQkB,aAER5B,GAAS6B,EAAAA,EAAAA,IAAgB,CAAEC,GAAIhC,EAASgC,GAAIC,KAAMf,KAGpDgB,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,WACT,wBAAAjB,EAAAkB,OAAA,GAAA5B,EAAA,KACJ,gBA3BiB6B,EAAAC,GAAA,OAAAlC,EAAAmC,MAAA,KAAAC,UAAA,KA6BlB,OACE1D,EAAAA,EAAAA,KAAC2D,EAAAA,GAAM,CACLC,cACExC,EACI,CACES,MAAO,GACPC,KAAM,GACNC,KAAM,GACNE,MAAO,GACPD,MAAO,IAEThB,EAEN6C,iBAAkBC,EAAAA,EAAWC,WAC7BC,SAAU3C,EAAatB,SAEtB,SAACZ,GACA,IAAM8E,EAAa9E,EAAM+E,cAA2B,YAAXjD,EACnCkD,EAAgB/C,EAAY,cAAgB,cAClD,OACEvB,EAAAA,EAAAA,MAACuE,EAAAA,GAAI,CAAArE,SAAA,EACHC,EAAAA,EAAAA,KAACqE,EAAAA,EAAW,CACVnF,MAAM,aACNM,KAAK,QACLoB,KAAK,OACL0D,QAAQ,OACRC,WAAS,KAEXvE,EAAAA,EAAAA,KAACwE,EAAAA,EAAc,CACbtF,MAAM,cACNM,KAAK,OACLoB,KAAK,YACL6D,KAAK,OAEPzE,EAAAA,EAAAA,KAACqE,EAAAA,EAAW,CAACnF,MAAM,OAAOM,KAAK,OAAOoB,KAAK,OAAO0D,QAAQ,UAC1DtE,EAAAA,EAAAA,KAAA,SACE0E,QAAQ,QACR5E,UAAU,yCAAwCC,SACnD,WAGDC,EAAAA,EAAAA,KAAA,SACEF,UAAU,oBACVkD,GAAG,QACHpC,KAAK,OACL+D,SAAU,SAACC,GACTzF,EAAM0F,cAAc,QAASD,EAAEE,OAAOC,MAAM,GAC9C,KAEF/E,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACgF,EAAAA,GAAU,CAACxF,KAAK,QAAOO,SACrB,SAACkF,GACA,IAAQC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,OAENlD,EAFuBgD,EAATG,KACdzD,OACAM,MACR,OACEjC,EAAAA,EAAAA,KAAAqF,EAAAA,SAAA,CAAAtF,SACGkC,GAASA,EAAMS,OAAS,GACvB1C,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SACvBkC,EAAM3B,KAAI,SAACgF,EAAM9E,GAAK,OACrBX,EAAAA,EAAAA,MAAA,MACEC,UAAU,gCAA+BC,SAAA,CAGxCkC,EAAMS,OAAS,IACd1C,EAAAA,EAAAA,KAACuF,EAAAA,EAAK,CAAC/E,MAAOA,EAAOM,KAAM,UAE7Bd,EAAAA,EAAAA,KAACqE,EAAAA,EAAW,CACVzD,KAAK,OACL1B,MAAM,OACNM,KAAI,SAAAuB,OAAWP,GACf8D,QAAQ,UAEVtE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAY0F,KAAK,QAAOzF,SAAA,EACrCC,EAAAA,EAAAA,KAAA,UACEY,KAAK,SACLd,UAAU,iCACVe,QAAS,kBAAMsE,EAAO3E,EAAM,EAACT,SAC9B,qBAGDC,EAAAA,EAAAA,KAAA,UACEY,KAAK,SACLd,UAAU,iCACVe,QAAS,kBAAMqE,EAAK,GAAG,EAACnF,SACzB,sBAxBAS,EA6BF,OAITR,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAA,UACEY,KAAK,SACLd,UAAU,iCACVe,QAAS,kBAAMqE,EAAK,GAAG,EAACnF,SACzB,kBAOX,OAGJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAACyF,EAAAA,EAAO,CAAChF,KAAK,QAAOV,SAAC,YACtBC,EAAAA,EAAAA,KAAC0F,EAAAA,EAAS,CAAC5E,KAAMqD,EAAewB,SAAU1B,WAKpD,GAGN,E,SCzJM5D,EAAmB,CAAC,aAAc,mCAsCxC,EApC2B,SAAHpB,GAAkB,IAAZ2G,EAAI3G,EAAJ2G,KAC5BC,GAAgCC,EAAAA,EAAAA,IAAYC,EAAAA,GAApC9C,EAAI4C,EAAJ5C,KAAM9C,EAAK0F,EAAL1F,MAAOc,EAAM4E,EAAN5E,OACrB+E,GAA6BC,EAAAA,EAAAA,KAArBC,EAAKF,EAALE,MAAOC,EAASH,EAATG,UACPnD,GAAOoD,EAAAA,EAAAA,MAAPpD,GACFnB,EAAQ+D,EAAO,iBAAmB,mBACpC5E,EAAW,KAqBf,OAnBI4E,IACF5E,EAAWiC,EAAKoD,MAAK,SAACC,GAAI,OAAKA,EAAKtD,KAAOuD,SAASvD,EAAG,MAGzDwD,EAAAA,EAAAA,YAAU,WACO,aAAXvF,EAIW,cAAXA,GAIFkF,EAHaP,EACT,4BACA,4BACY,WAPhBO,EAAUhG,EAAO,SAWrB,GAAG,CAACc,KAGFpB,EAAAA,EAAAA,MAAC4G,EAAAA,EAAO,CAAA1G,SAAA,EACNC,EAAAA,EAAAA,KAAC0G,EAAAA,EAAK,CAACC,MAAOT,KACdlG,EAAAA,EAAAA,KAAC4G,EAAAA,EAAS,CAAA7G,SAAE8B,KACZ7B,EAAAA,EAAAA,KAAC6G,EAAAA,EAAgB,CAACxG,iBAAkBA,KACpCL,EAAAA,EAAAA,KAAC8G,EAAQ,CAAC9F,SAAU4E,EAAO5E,EAAW,KAAMC,OAAQA,MAG1D,C,uDClDO,IAAM8E,EAAa,SAACY,GAAK,OAAKA,EAAM1D,IAAK,C","sources":["components/FormComponents/CustomTextArea.jsx","components/FormComponents/FormRequirements.jsx","components/FormComponents/FormTitle.jsx","components/shared/BackBtn.jsx","components/shared/Badge.jsx","components/shared/Section.jsx","components/News/NewsForm.jsx","pages/NewsOperationsPage.jsx","redux/news/selectorNews.js"],"sourcesContent":["import { useField } from \"formik\";\nimport FormWarning from \"./FormWarning\";\n\nconst CustomTextArea = ({ label, ...props }) => {\n  const [field, meta] = useField(props.name);\n  return (\n    <div className=\"mb-3\">\n      <label className=\"form-label px-3 text-secondary fw-bold\">{label}</label>\n      <textarea {...field} {...props} className=\"form-control\" />\n      {meta.touched && meta.error && <FormWarning>{meta.error}</FormWarning>}\n    </div>\n  );\n};\n\nexport default CustomTextArea;\n","import React from \"react\";\n\nconst FormRequirements = ({ requirementsList }) => {\n  return (\n    <div className=\"col-md-6 mb-3\">\n      <p className=\"mb-2 px-3 text-secondary fw-bolder\">required fields:</p>\n      <ul className=\"list-group list-group-numbered\">\n        {requirementsList.map((requirement, index) => (\n          <li key={index} className=\"list-group-item\">\n            {requirement}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default FormRequirements;\n","const FormTitle = ({ children }) => {\n  return <h4 className=\"text-center mb-3\">{children}</h4>;\n};\n\nexport default FormTitle;\n","import { useNavigate } from \"react-router-dom\";\n\nconst BackBtn = ({ path, children }) => {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-outline-secondary\"\n      onClick={() => navigate(path)}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default BackBtn;\n","const Badge = ({ index, text }) => {\n  return (\n    <div className=\"mb-3\">\n      <span className=\"px-3 badge rounded-pill text-bg-secondary \">\n        {`${text} ${index + 1}`}\n      </span>\n    </div>\n  );\n};\n\nexport default Badge;\n","const Section = ({ children }) => {\n  return <section className=\"py-4\">{children}</section>;\n};\n\nexport default Section;\n","import { FieldArray, Form, Formik } from \"formik\";\n\nimport { useDispatch } from \"react-redux\";\nimport { addNewsThunk, updateNewsThunk } from \"../../redux/news/operationsNews\";\n\nimport Badge from \"../shared/Badge\";\nimport BackBtn from \"../shared/BackBtn\";\nimport CustomInput from \"../FormComponents/CustomInput\";\nimport CustomTextArea from \"../FormComponents/CustomTextArea\";\nimport SubmitBtn from \"../shared/SubmitBtn\";\n\nimport { validation } from \"../../assets/utils/validationSchema\";\n\nconst NewsForm = ({ newsItem, status }) => {\n  const dispatch = useDispatch();\n  const isNewItem = !newsItem;\n\n  const handleSubmit = async (values, actions) => {\n    const { title, body, date, image, links } = values;\n\n    const formData = new FormData();\n    formData.append(\"news[title]\", title.trim());\n    formData.append(\"news[body]\", body.trim());\n    formData.append(\"news[date]\", date.trim());\n    if (links.length) {\n      links.forEach((element) => {\n        formData.append(\"news[links][]\", element.trim());\n      });\n    }\n    if (image) {\n      formData.append(\"news[image]\", image);\n    }\n\n    if (isNewItem) {\n      dispatch(addNewsThunk(formData));\n      actions.resetForm();\n    } else {\n      dispatch(updateNewsThunk({ id: newsItem.id, news: formData }));\n    }\n\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={\n        isNewItem\n          ? {\n              title: \"\",\n              body: \"\",\n              date: \"\",\n              links: [],\n              image: \"\",\n            }\n          : newsItem\n      }\n      validationSchema={validation.newsSchema}\n      onSubmit={handleSubmit}\n    >\n      {(props) => {\n        const isDisabled = props.isSubmitting || status === \"pending\";\n        const submitBtnText = isNewItem ? \"Create News\" : \"Update nNws\";\n        return (\n          <Form>\n            <CustomInput\n              label=\"News title\"\n              name=\"title\"\n              type=\"text\"\n              bsclass=\"mb-3\"\n              autoFocus\n            />\n            <CustomTextArea\n              label=\"Description\"\n              name=\"body\"\n              type=\"text-area\"\n              rows=\"5\"\n            />\n            <CustomInput label=\"Date\" name=\"date\" type=\"text\" bsclass=\"mb-3\" />\n            <label\n              htmlFor=\"image\"\n              className=\"form-label px-3 text-secondary fw-bold\"\n            >\n              Image\n            </label>\n            <input\n              className=\"form-control mb-3\"\n              id=\"image\"\n              type=\"file\"\n              onChange={(e) => {\n                props.setFieldValue(\"image\", e.target.files[0]);\n              }}\n            />\n            <div>\n              <FieldArray name=\"links\">\n                {(fieldArrayProps) => {\n                  const { push, remove, form } = fieldArrayProps;\n                  const { values } = form;\n                  const { links } = values;\n                  return (\n                    <>\n                      {links && links.length > 0 ? (\n                        <ul className=\"list-group\">\n                          {links.map((link, index) => (\n                            <li\n                              className=\"list-group-item border-2 mb-2\"\n                              key={index}\n                            >\n                              {links.length > 1 && (\n                                <Badge index={index} text={\"link\"} />\n                              )}\n                              <CustomInput\n                                type=\"text\"\n                                label=\"Link\"\n                                name={`links.${index}`}\n                                bsclass=\"mb-3\"\n                              />\n                              <div className=\"text-end\">\n                                <div className=\"btn-group\" role=\"group\">\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-outline-primary\"\n                                    onClick={() => remove(index)}\n                                  >\n                                    remove the link\n                                  </button>\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-outline-primary\"\n                                    onClick={() => push(\"\")}\n                                  >\n                                    add a link\n                                  </button>\n                                </div>\n                              </div>\n                            </li>\n                          ))}\n                        </ul>\n                      ) : (\n                        <div className=\"text-end\">\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-sm btn-outline-primary\"\n                            onClick={() => push(\"\")}\n                          >\n                            Add a link\n                          </button>\n                        </div>\n                      )}\n                    </>\n                  );\n                }}\n              </FieldArray>\n            </div>\n            <div className=\"text-end mt-3\">\n              <div className=\"btn-group\">\n                <BackBtn path=\"/news\">Cancel</BackBtn>\n                <SubmitBtn text={submitBtnText} disabled={isDisabled} />\n              </div>\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default NewsForm;\n","import { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectNews } from \"../redux/news/selectorNews\";\n\nimport Alert from \"../components/shared/Alert\";\nimport { useAlert } from \"../assets/customHooks/useAlert\";\n\nimport FormTitle from \"../components/FormComponents/FormTitle\";\nimport FormRequirements from \"../components/FormComponents/FormRequirements\";\nimport NewsForm from \"../components/News/NewsForm\";\nimport Section from \"../components/shared/Section\";\n\nconst requirementsList = [\"News title\", \"Date ( example: April 1, 2023 )\"];\n\nconst NewsOperationsPage = ({ edit }) => {\n  const { news, error, status } = useSelector(selectNews);\n  const { alert, showAlert } = useAlert();\n  const { id } = useParams();\n  const title = edit ? \"Edit news card\" : \"Create news card\";\n  let newsItem = null;\n\n  if (edit) {\n    newsItem = news.find((item) => item.id === parseInt(id));\n  }\n\n  useEffect(() => {\n    if (status === \"rejected\") {\n      showAlert(error, \"danger\");\n      return;\n    }\n    if (status === \"fulfilled\") {\n      const text = edit\n        ? \"Card updated successfully\"\n        : \"Card created successfully\";\n      showAlert(text, \"success\");\n      return;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [status]);\n\n  return (\n    <Section>\n      <Alert state={alert} />\n      <FormTitle>{title}</FormTitle>\n      <FormRequirements requirementsList={requirementsList} />\n      <NewsForm newsItem={edit ? newsItem : null} status={status} />\n    </Section>\n  );\n};\n\nexport default NewsOperationsPage;\n","export const selectNews = (state) => state.news;\n"],"names":["_ref","label","props","_objectWithoutProperties","_excluded","_useField","useField","name","_useField2","_slicedToArray","field","meta","_jsxs","className","children","_jsx","_objectSpread","touched","error","FormWarning","requirementsList","map","requirement","index","path","navigate","useNavigate","type","onClick","text","concat","newsItem","status","dispatch","useDispatch","isNewItem","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","actions","title","body","date","image","links","formData","wrap","_context","prev","next","FormData","append","trim","length","forEach","element","addNewsThunk","resetForm","updateNewsThunk","id","news","window","scrollTo","top","behavior","stop","_x","_x2","apply","arguments","Formik","initialValues","validationSchema","validation","newsSchema","onSubmit","isDisabled","isSubmitting","submitBtnText","Form","CustomInput","bsclass","autoFocus","CustomTextArea","rows","htmlFor","onChange","e","setFieldValue","target","files","FieldArray","fieldArrayProps","push","remove","form","_Fragment","link","Badge","role","BackBtn","SubmitBtn","disabled","edit","_useSelector","useSelector","selectNews","_useAlert","useAlert","alert","showAlert","useParams","find","item","parseInt","useEffect","Section","Alert","state","FormTitle","FormRequirements","NewsForm"],"sourceRoot":""}