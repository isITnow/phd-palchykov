{"version":3,"file":"static/js/271.37fd2d7a.chunk.js","mappings":"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","sources":["assets/utils/formateDate.js","assets/utils/setPageTitle.js","components/FormComponents/CustomTextArea.jsx","webpack://phd-palchykov/./src/components/Posts/post.module.css?12d6","components/Posts/Post.jsx","components/Posts/PostForm.jsx","components/shared/Section.jsx","components/Posts/PostsList.jsx","pages/PostsPage.jsx","redux/posts/selectorPosts.js"],"sourcesContent":["import moment from \"moment\";\n\nconst formateDate = (entity) => {\n  const postedDate = moment(entity.created_at).fromNow();\n  const editedDate = moment(entity.updated_at).fromNow();\n  const isEdited = entity.updated_at > entity.created_at;\n  return { postedDate, editedDate, isEdited };\n};\n\nexport default formateDate;\n","const setPageTitle = (pageTitle) => {\n  const baseTitle = \"Prof. Dr. Palchykov\";\n  if (pageTitle) {\n    return (document.title = `${pageTitle} | ${baseTitle}`);\n  }\n\n  return (document.title = baseTitle);\n};\n\nexport default setPageTitle;\n","import { useField } from \"formik\";\nimport FormWarning from \"./FormWarning\";\n\nconst CustomTextArea = ({ label, ...props }) => {\n  const [field, meta] = useField(props.name);\n  return (\n    <div className=\"mb-3\">\n      <label className=\"form-label px-3 text-secondary fw-bold\">{label}</label>\n      <textarea {...field} {...props} className=\"form-control\" />\n      {meta.touched && meta.error && <FormWarning>{meta.error}</FormWarning>}\n    </div>\n  );\n};\n\nexport default CustomTextArea;\n","// extracted by mini-css-extract-plugin\nexport default {\"hoverEffect\":\"post_hoverEffect__GRfm3\"};","import { Link } from \"react-router-dom\";\n\nimport formateDate from \"../../assets/utils/formateDate\";\n\nimport s from \"./post.module.css\";\n\nconst Post = ({ post, single }) => {\n  const { postedDate, editedDate, isEdited } = formateDate(post);\n\n  const commentsCount = single ? post?.comments?.length : post?.comments;\n  const cardStyle = single ? \"card shadow\" : `${s.hoverEffect} card`;\n\n  return (\n    <div className={cardStyle}>\n      <div className=\"card-header\">\n        <small className=\"text-primary fw-bold\">posted: {postedDate}</small>\n        {isEdited && (\n          <>\n            <span className=\"mx-2\">|</span>\n            <small className=\"text-primary fw-bold\">\n              updated: {editedDate}\n            </small>\n          </>\n        )}\n        {!!commentsCount && (\n          <>\n            <span className=\"mx-2\">|</span>\n            <small className=\"text-primary fw-bold\">\n              comments: {commentsCount}\n            </small>\n          </>\n        )}\n      </div>\n      {single ? (\n        <div className=\"card-body\">\n          <p className=\"card-text\">{post.body}</p>\n        </div>\n      ) : (\n        <Link to={`/posts/${post.id}`} style={{ color: \"inherit\" }}>\n          <div className=\"card-body\">\n            <p className=\"card-text text-truncate\">{post.body}</p>\n          </div>\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n","import { Form, Formik } from \"formik\";\n\nimport { useDispatch } from \"react-redux\";\nimport {\n  addPostThunk,\n  updatePostThunk,\n} from \"../../redux/posts/operationsPosts\";\n\nimport CustomTextArea from \"../FormComponents/CustomTextArea\";\nimport SubmitBtn from \"../shared/SubmitBtn\";\nimport { validation } from \"../../assets/utils/validationSchema\";\n\nconst PostForm = ({ post, status }) => {\n  const dispatch = useDispatch();\n  const isNewItem = !post;\n\n  const handleSubmit = async (values, actions) => {\n    const { body } = values;\n\n    const formData = new FormData();\n    formData.append(\"post[body]\", body.trim());\n\n    if (post) {\n      dispatch(updatePostThunk({ id: post.id, post: formData }));\n    } else {\n      dispatch(addPostThunk(formData));\n      actions.resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        body: isNewItem ? \"\" : post.body,\n      }}\n      validationSchema={validation.postSchema}\n      onSubmit={handleSubmit}\n    >\n      {(props) => {\n        const isDisabled = props.isSubmitting || status === \"pending\";\n        const submitBtnText = isNewItem ? \"Create Post\" : \"Update Post\";\n\n        return (\n          <Form>\n            <CustomTextArea\n              label=\"Post text\"\n              name=\"body\"\n              type=\"text\"\n              rows=\"3\"\n            />\n            <div className=\"text-end\">\n              <SubmitBtn text={submitBtnText} disabled={isDisabled} />\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default PostForm;\n","const Section = ({ children }) => {\n  return <section className=\"py-4\">{children}</section>;\n};\n\nexport default Section;\n","import Post from \"./Post\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nconst listItem = {\n  initial: { opacity: 0, y: -10 },\n  animate: { opacity: 1, y: 0 },\n  exit: { opacity: 0, y: -10 },\n};\n\nconst PostsList = ({ posts }) => {\n  return (\n    <ul>\n      <AnimatePresence>\n        {posts?.map((post) => (\n          <motion.li\n            className=\"mb-3\"\n            key={post.id}\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            variants={listItem}\n          >\n            <Post post={post} />\n          </motion.li>\n        ))}\n      </AnimatePresence>\n    </ul>\n  );\n};\n\nexport default PostsList;\n","import { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPostsThunk } from \"../redux/posts/operationsPosts\";\nimport {\n  selectPostsList,\n  selectError,\n  selectStatus,\n} from \"../redux/posts/selectorPosts\";\n\nimport Alert from \"../components/shared/Alert\";\nimport { useAlert } from \"../assets/customHooks/useAlert\";\n\nimport Loader from \"../components/shared/Loader\";\nimport PostsList from \"../components/Posts/PostsList\";\nimport PostForm from \"../components/Posts/PostForm\";\nimport Section from \"../components/shared/Section\";\n\nimport setPageTitle from \"../assets/utils/setPageTitle\";\nimport useSignInStatus from \"../assets/customHooks/useSignInStatus\";\n\nconst PostsPage = () => {\n  setPageTitle(\"Blog\");\n\n  const dispatch = useDispatch(getPostsThunk());\n  const posts = useSelector(selectPostsList);\n  const error = useSelector(selectError);\n  const status = useSelector(selectStatus);\n  const { alert, showAlert } = useAlert();\n  const isLoggedIn = useSignInStatus();\n\n  useEffect(() => {\n    dispatch(getPostsThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    switch (status) {\n      case \"rejected\":\n        showAlert(`${error}. Please contact your administrator!`, \"danger\");\n        break;\n\n      case \"fulfilled\":\n        showAlert(\"Post created successfully\", \"success\");\n        break;\n\n      case \"removed\":\n        showAlert(\"Post deleted successfully\", \"success\");\n        break;\n      default:\n        break;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [status]);\n\n  if (status === \"loading\") {\n    return <Loader />;\n  }\n\n  return (\n    <Section>\n      <Alert state={alert} />\n\n      {isLoggedIn ? (\n        <div className=\"mb-4\">\n          <PostForm />\n        </div>\n      ) : (\n        <div className=\"mb-4\">\n          <h3 className=\"text-center text-primary fw-bold\">\n            Welcome to my personal Blog\n          </h3>\n          <h4 className=\"text-center text-secondary fw-bold\">\n            Feel free to leave your comments\n          </h4>\n        </div>\n      )}\n      <PostsList posts={posts} />\n    </Section>\n  );\n};\n\nexport default PostsPage;\n","export const selectPostsList = (state) => state.posts.postsList;\nexport const selectOnePost = (state) => state.posts.onePost;\nexport const selectError = (state) => state.posts.error;\nexport const selectStatus = (state) => state.posts.status;\nexport const selectComments = (state) => state.posts.onePost?.comments;\n"],"names":["entity","postedDate","moment","created_at","fromNow","editedDate","updated_at","isEdited","pageTitle","baseTitle","document","title","concat","_ref","label","props","_objectWithoutProperties","_excluded","_useField","useField","name","_useField2","_slicedToArray","field","meta","_jsxs","className","children","_jsx","_objectSpread","touched","error","FormWarning","_post$comments","post","single","_formateDate","formateDate","commentsCount","comments","length","cardStyle","s","_Fragment","body","Link","to","id","style","color","status","dispatch","useDispatch","isNewItem","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","actions","formData","wrap","_context","prev","next","FormData","append","trim","updatePostThunk","addPostThunk","resetForm","stop","_x","_x2","apply","arguments","Formik","initialValues","validationSchema","validation","postSchema","onSubmit","isDisabled","isSubmitting","submitBtnText","Form","CustomTextArea","type","rows","SubmitBtn","text","disabled","listItem","initial","opacity","y","animate","exit","posts","AnimatePresence","map","motion","li","variants","Post","setPageTitle","getPostsThunk","useSelector","selectPostsList","selectError","selectStatus","_useAlert","useAlert","alert","showAlert","isLoggedIn","useSignInStatus","useEffect","Loader","Section","Alert","state","PostForm","PostsList","postsList","selectOnePost","onePost","selectComments","_state$posts$onePost"],"sourceRoot":""}