{"version":3,"file":"static/js/892.c8e3cebe.chunk.js","mappings":"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","sources":["components/FormComponents/CustomTextArea.jsx","components/FormComponents/FormRequirements.jsx","components/FormComponents/FormTitle.jsx","components/shared/BackBtn.jsx","components/shared/Badge.jsx","components/shared/Section.jsx","components/Research/ResearchForm.jsx","pages/ResearchOperationsPage.jsx","redux/researches/selectorResearches.js"],"sourcesContent":["import { useField } from \"formik\";\nimport FormWarning from \"./FormWarning\";\n\nconst CustomTextArea = ({ label, ...props }) => {\n  const [field, meta] = useField(props.name);\n  return (\n    <div className=\"mb-3\">\n      <label className=\"form-label px-3 text-secondary fw-bold\">{label}</label>\n      <textarea {...field} {...props} className=\"form-control\" />\n      {meta.touched && meta.error && <FormWarning>{meta.error}</FormWarning>}\n    </div>\n  );\n};\n\nexport default CustomTextArea;\n","import React from \"react\";\n\nconst FormRequirements = ({ requirementsList }) => {\n  return (\n    <div className=\"col-md-6 mb-3\">\n      <p className=\"mb-2 px-3 text-secondary fw-bolder\">required fields:</p>\n      <ul className=\"list-group list-group-numbered\">\n        {requirementsList.map((requirement, index) => (\n          <li key={index} className=\"list-group-item\">\n            {requirement}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default FormRequirements;\n","const FormTitle = ({ children }) => {\n  return <h4 className=\"text-center mb-3\">{children}</h4>;\n};\n\nexport default FormTitle;\n","import { useNavigate } from \"react-router-dom\";\n\nconst BackBtn = ({ path, children }) => {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-outline-secondary\"\n      onClick={() => navigate(path)}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default BackBtn;\n","const Badge = ({ index, text }) => {\n  return (\n    <div className=\"mb-3\">\n      <span className=\"px-3 badge rounded-pill text-bg-secondary \">\n        {`${text} ${index + 1}`}\n      </span>\n    </div>\n  );\n};\n\nexport default Badge;\n","const Section = ({ children }) => {\n  return <section className=\"py-4\">{children}</section>;\n};\n\nexport default Section;\n","import { FieldArray, Form, Formik } from \"formik\";\n\nimport { useDispatch } from \"react-redux\";\nimport { addResearchThunk } from \"../../redux/researches/operationsResearches\";\n\nimport { validation } from \"../../assets/utils/validationSchema\";\n\nimport Badge from \"../shared/Badge\";\nimport BackBtn from \"../shared/BackBtn\";\nimport CustomInput from \"../FormComponents/CustomInput\";\nimport CustomTextArea from \"../FormComponents/CustomTextArea\";\nimport SubmitBtn from \"../shared/SubmitBtn\";\n\nconst ResearchForm = ({ status }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    const { title, illustrationList, sourceList } = values;\n\n    let illustrationsData = [];\n    illustrationList.forEach(({ schema, description, sequence_number }) => {\n      const formData = new FormData();\n      formData.append(\"illustration[description]\", description.trim());\n      formData.append(\"illustration[sequence_number]\", sequence_number);\n      formData.append(\"illustration[schema]\", schema);\n      illustrationsData.push(formData);\n    });\n\n    const researchFormData = new FormData();\n    const payload = {\n      title,\n      sourceList,\n    };\n    researchFormData.append(\"research[payload]\", JSON.stringify(payload));\n\n    dispatch(\n      addResearchThunk({ illustrationsData, research: researchFormData })\n    );\n\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: \"\",\n        illustrationList: [\n          {\n            description: \"\",\n            schema: \"\",\n            sequence_number: 0,\n          },\n        ],\n        sourceList: [\n          {\n            source: \"\",\n            source_url: \"\",\n          },\n        ],\n      }}\n      validationSchema={validation.researchSchema}\n      onSubmit={handleSubmit}\n    >\n      {(props) => {\n        const isDisabled = props.isSubmitting || status === \"pending\";\n        return (\n          <Form>\n            <CustomInput\n              label=\"Research title\"\n              name=\"title\"\n              type=\"text\"\n              bsclass=\"mb-3\"\n              autoFocus\n            />\n            <div>\n              <FieldArray name=\"illustrationList\">\n                {({ push, remove, form }) => {\n                  const { values } = form;\n                  const { illustrationList } = values;\n                  return (\n                    <>\n                      {illustrationList && illustrationList.length > 0 ? (\n                        <ul className=\"list-group\">\n                          {illustrationList.map((item, index) => (\n                            <li\n                              className=\"list-group-item border-2 mb-2\"\n                              key={index}\n                            >\n                              {illustrationList.length > 1 && (\n                                <Badge index={index} text={\"illustration\"} />\n                              )}\n                              <CustomTextArea\n                                label=\"Description\"\n                                type=\"text-area\"\n                                rows=\"5\"\n                                name={`illustrationList.${index}.description`}\n                              />\n                              <label\n                                htmlFor=\"formFile\"\n                                className=\"form-label px-3 text-secondary fw-bold\"\n                              >\n                                Illustration image\n                              </label>\n                              <input\n                                className=\"form-control mb-3\"\n                                id=\"formFile\"\n                                type=\"file\"\n                                onChange={(e) => {\n                                  props.setFieldValue(\n                                    `illustrationList.${index}.schema`,\n                                    e.target.files[0]\n                                  );\n                                }}\n                              />\n                              <div className=\"d-flex flex-column flex-md-row justify-content-md-between align-items-md-end\">\n                                <CustomInput\n                                  label=\"Sequence Num\"\n                                  type=\"number\"\n                                  name={`illustrationList.${index}.sequence_number`}\n                                />\n                                <div\n                                  className=\"btn-group mt-3 mt-md-0\"\n                                  role=\"group\"\n                                >\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-outline-primary\"\n                                    onClick={() => remove(index)}\n                                  >\n                                    remove the illustration\n                                  </button>\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-outline-primary\"\n                                    onClick={() =>\n                                      push({\n                                        description: \"\",\n                                        schema: \"\",\n                                        sequence_number: 0,\n                                      })\n                                    }\n                                  >\n                                    add an illustration\n                                  </button>\n                                </div>\n                              </div>\n                            </li>\n                          ))}\n                        </ul>\n                      ) : (\n                        <div className=\"text-end\">\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-sm btn-outline-primary\"\n                            onClick={() =>\n                              push({\n                                description: \"\",\n                                schema: \"\",\n                                sequence_number: 0,\n                              })\n                            }\n                          >\n                            Add an illustration\n                          </button>\n                        </div>\n                      )}\n                    </>\n                  );\n                }}\n              </FieldArray>\n            </div>\n            <div className=\"mt-3\">\n              <FieldArray name=\"sourceList\">\n                {({ push, remove, form }) => {\n                  const { values } = form;\n                  const { sourceList } = values;\n                  return (\n                    <>\n                      {sourceList && sourceList.length > 0 ? (\n                        <ul className=\"list-group\">\n                          {sourceList.map((item, index) => (\n                            <li\n                              className=\"list-group-item border-2 mb-2\"\n                              key={index}\n                            >\n                              {sourceList.length > 1 && (\n                                <Badge index={index} text={\"resource\"} />\n                              )}\n                              <CustomInput\n                                type=\"text\"\n                                label=\"Source\"\n                                name={`sourceList.${index}.source`}\n                                bsclass=\"mb-3\"\n                              />\n                              <CustomInput\n                                type=\"text\"\n                                label=\"Source URL\"\n                                name={`sourceList.${index}.source_url`}\n                                bsclass=\"mb-3\"\n                              />\n                              <div className=\"text-end\">\n                                <div className=\"btn-group\" role=\"group\">\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-outline-primary\"\n                                    onClick={() => remove(index)}\n                                  >\n                                    remove the source\n                                  </button>\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-outline-primary\"\n                                    onClick={() =>\n                                      push({\n                                        source: \"\",\n                                        source_url: \"\",\n                                      })\n                                    }\n                                  >\n                                    add a source\n                                  </button>\n                                </div>\n                              </div>\n                            </li>\n                          ))}\n                        </ul>\n                      ) : (\n                        <div className=\"text-end\">\n                          <button\n                            type=\"button\"\n                            className=\"btn  btn-outline-primary\"\n                            onClick={() =>\n                              push({\n                                source: \"\",\n                                source_url: \"\",\n                              })\n                            }\n                          >\n                            Add a source\n                          </button>\n                        </div>\n                      )}\n                    </>\n                  );\n                }}\n              </FieldArray>\n            </div>\n            <div className=\"text-end mt-3\">\n              <div className=\"btn-group\">\n                <BackBtn path=\"/research\">Cancel</BackBtn>\n                <SubmitBtn text=\"Create Research card\" disabled={isDisabled} />\n              </div>\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default ResearchForm;\n","import { useEffect } from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectResearches } from \"../redux/researches/selectorResearches\";\n\nimport Alert from \"../components/shared/Alert\";\nimport { useAlert } from \"../assets/customHooks/useAlert\";\n\nimport FormTitle from \"../components/FormComponents/FormTitle\";\nimport FormRequirements from \"../components/FormComponents/FormRequirements\";\nimport ResearchForm from \"../components/Research/ResearchForm\";\nimport Section from \"../components/shared/Section\";\n\nconst requirementsList = [\n  \"Research title\",\n  \"Description\",\n  \"Attachment ( illustration image )\",\n  \"Source\",\n  \"Source URL\",\n];\n\nconst ResearchOperationsPage = () => {\n  const { status, error } = useSelector(selectResearches);\n  const { alert, showAlert } = useAlert();\n\n  const title = \"Create research\";\n\n  useEffect(() => {\n    if (status === \"rejected\") {\n      showAlert(error, \"danger\");\n      return;\n    }\n    if (status === \"fulfilled\") {\n      const text = \"Research created successfully\";\n      showAlert(text, \"success\");\n      return;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [status]);\n\n  return (\n    <Section>\n      <Alert state={alert} />\n      <FormTitle>{title}</FormTitle>\n      <FormRequirements requirementsList={requirementsList} />\n      <ResearchForm status={status} />\n    </Section>\n  );\n};\n\nexport default ResearchOperationsPage;\n","export const selectResearches = (state) => state.researches;\n"],"names":["_ref","label","props","_objectWithoutProperties","_excluded","_useField","useField","name","_useField2","_slicedToArray","field","meta","_jsxs","className","children","_jsx","_objectSpread","touched","error","FormWarning","requirementsList","map","requirement","index","path","navigate","useNavigate","type","onClick","text","concat","status","dispatch","useDispatch","Formik","initialValues","title","illustrationList","description","schema","sequence_number","sourceList","source","source_url","validationSchema","validation","researchSchema","onSubmit","values","actions","illustrationsData","forEach","_ref2","formData","FormData","append","trim","push","researchFormData","payload","JSON","stringify","addResearchThunk","research","window","scrollTo","top","behavior","resetForm","isDisabled","isSubmitting","Form","CustomInput","bsclass","autoFocus","FieldArray","_ref3","remove","form","_Fragment","length","item","Badge","CustomTextArea","rows","htmlFor","id","onChange","e","setFieldValue","target","files","role","_ref4","BackBtn","SubmitBtn","disabled","_useSelector","useSelector","selectResearches","_useAlert","useAlert","alert","showAlert","useEffect","Section","Alert","state","FormTitle","FormRequirements","ResearchForm","researches"],"sourceRoot":""}