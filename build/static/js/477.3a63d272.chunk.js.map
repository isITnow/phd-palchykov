{"version":3,"file":"static/js/477.3a63d272.chunk.js","mappings":"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","sources":["components/FormComponents/FormRequirements.jsx","components/FormComponents/FormTitle.jsx","components/shared/BackBtn.jsx","components/shared/Badge.jsx","components/shared/Section.jsx","components/FormComponents/CustomSelect.jsx","assets/utils/getCurrentEntity.js","assets/utils/getYearsArray.js","components/Publications/PublicationForm.jsx","pages/PublicationOperationsPage.jsx","redux/publications/selectorPublications.js"],"sourcesContent":["import React from \"react\";\n\nconst FormRequirements = ({ requirementsList }) => {\n  return (\n    <div className=\"col-md-6 mb-3\">\n      <p className=\"mb-2 px-3 text-secondary fw-bolder\">required fields:</p>\n      <ul className=\"list-group list-group-numbered\">\n        {requirementsList.map((requirement, index) => (\n          <li key={index} className=\"list-group-item\">\n            {requirement}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default FormRequirements;\n","const FormTitle = ({ children }) => {\n  return <h4 className=\"text-center mb-3\">{children}</h4>;\n};\n\nexport default FormTitle;\n","import { useNavigate } from \"react-router-dom\";\n\nconst BackBtn = ({ path, children }) => {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-outline-secondary\"\n      onClick={() => navigate(path)}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default BackBtn;\n","const Badge = ({ index, text }) => {\n  return (\n    <div className=\"mb-3\">\n      <span className=\"px-3 badge rounded-pill text-bg-secondary \">\n        {`${text} ${index + 1}`}\n      </span>\n    </div>\n  );\n};\n\nexport default Badge;\n","const Section = ({ children }) => {\n  return <section className=\"py-4\">{children}</section>;\n};\n\nexport default Section;\n","import { useField } from \"formik\";\nimport FormWarning from \"./FormWarning\";\n\nconst CustomSelect = ({ label, items, ...props }) => {\n  const [field, meta] = useField(props.name);\n  return (\n    <div className=\"mb-3\">\n      <label className=\"form-label px-3 text-secondary fw-bold\">{label}</label>\n      <select {...field} {...props} className=\"form-select\">\n        <option defaultValue={\"Select\"}>Select a value</option>\n        {items.map((item, index) => (\n          <option key={index} value={item}>\n            {item}\n          </option>\n        ))}\n      </select>\n      {meta.touched && meta.error && <FormWarning>{meta.error}</FormWarning>}\n    </div>\n  );\n};\n\nexport default CustomSelect;\n","const getCurrentEntity = (array, id) => {\n  return array.find((entity) => entity.id === id);\n};\n\nexport default getCurrentEntity;\n","const getYearsArray = (period) => {\n  const [start, end] = period.title.split(\"-\");\n\n  let till = end;\n\n  if (end === \"present\") {\n    till = new Date().getFullYear();\n  }\n\n  let years = [];\n  let i = start;\n  while (till >= i) {\n    years.push(i.toString());\n    i++;\n  }\n  return years;\n};\n\nexport default getYearsArray;\n","import { useParams } from \"react-router-dom\";\nimport { FieldArray, Form, Formik } from \"formik\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addPublicationThunk,\n  updatePublicationThunk,\n} from \"../../redux/publications/operationsPublications\";\nimport { selectPeriods } from \"../../redux/publicationPeriods/selectorPublicationPeriods\";\n\nimport Badge from \"../shared/Badge\";\nimport BackBtn from \"../shared/BackBtn\";\nimport CustomInput from \"../FormComponents/CustomInput\";\nimport CustomSelect from \"../FormComponents/CustomSelect\";\nimport SubmitBtn from \"../shared/SubmitBtn\";\n\nimport { validation } from \"../../assets/utils/validationSchema\";\nimport getCurrentPeriod from \"../../assets/utils/getCurrentEntity\";\nimport getYearsArray from \"../../assets/utils/getYearsArray\";\n\nconst PublicationForm = ({ publication, status }) => {\n  const dispatch = useDispatch();\n  const { period_id } = useParams();\n  const { periods } = useSelector(selectPeriods);\n\n  const currentPeriodId = parseInt(period_id);\n  const currentPeriod = getCurrentPeriod(periods, currentPeriodId);\n  const periodYears = getYearsArray(currentPeriod).length\n    ? getYearsArray(currentPeriod)\n    : [\"no data\"];\n\n  const isNewItem = !publication;\n\n  const handleSubmit = async (values, actions) => {\n    const {\n      title,\n      year,\n      sequence_number,\n      source_url,\n      source,\n      cover,\n      abstract,\n      authors,\n    } = values;\n\n    const formData = new FormData();\n    formData.append(\"publication[title]\", title.trim());\n    formData.append(\"publication[year]\", year);\n    formData.append(\"publication[sequence_number]\", sequence_number);\n    formData.append(\"publication[title]\", title.trim());\n    formData.append(\"publication[source]\", source.trim());\n    formData.append(\"publication[source_url]\", source_url.trim());\n    if (authors.length) {\n      authors.forEach((item) => {\n        formData.append(\"publication[authors][]\", item.trim());\n      });\n    }\n    if (cover) {\n      formData.append(\"publication[cover]\", cover);\n    }\n    if (abstract) {\n      formData.append(\"publication[abstract]\", abstract);\n    }\n\n    if (isNewItem) {\n      dispatch(addPublicationThunk({ period_id, publication: formData }));\n      actions.resetForm();\n    } else {\n      dispatch(\n        updatePublicationThunk({\n          period_id,\n          publication_id: publication.id,\n          publication: formData,\n        })\n      );\n    }\n\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={\n        isNewItem\n          ? {\n              title: \"\",\n              year: \"\",\n              sequence_number: 0,\n              source_url: \"\",\n              source: \"\",\n              cover: \"\",\n              abstract: \"\",\n              authors: [\"\"],\n            }\n          : publication\n      }\n      validationSchema={validation.publicationSchema}\n      onSubmit={handleSubmit}\n    >\n      {(props) => {\n        const isDisabled = props.isSubmitting || status === \"pending\";\n        const submitBtnText = isNewItem\n          ? \"Create Publication\"\n          : \"Update Publication\";\n        return (\n          <Form>\n            <div className=\"row\">\n              <div className=\"col-6 col-md-8\">\n                <CustomSelect\n                  label=\"Publication Year\"\n                  name=\"year\"\n                  items={periodYears}\n                />\n              </div>\n              <div className=\"col-6 col-md-4\">\n                <CustomInput\n                  label=\"Sequence Num\"\n                  name=\"sequence_number\"\n                  type=\"number\"\n                  bsclass=\"mb-3\"\n                />\n              </div>\n            </div>\n            <CustomInput\n              label=\"Publication Title\"\n              name=\"title\"\n              type=\"text\"\n              bsclass=\"mb-3\"\n              autoFocus\n            />\n            <CustomInput\n              label=\"Source\"\n              name=\"source\"\n              type=\"text\"\n              bsclass=\"mb-3\"\n            />\n            <CustomInput\n              label=\"Source URL\"\n              name=\"source_url\"\n              type=\"text\"\n              bsclass=\"mb-3\"\n            />\n            <div className=\"col-md-6 mb-3\">\n              <label\n                htmlFor=\"formFile\"\n                className=\"form-label px-3 text-secondary fw-bold\"\n              >\n                Cover image\n              </label>\n              <input\n                className=\"form-control mb-3\"\n                id=\"formFile\"\n                type=\"file\"\n                onChange={(e) => {\n                  props.setFieldValue(\"cover\", e.target.files[0]);\n                }}\n              />\n              <label\n                htmlFor=\"formFile\"\n                className=\"form-label px-3 text-secondary fw-bold\"\n              >\n                Abstract image\n              </label>\n              <input\n                className=\"form-control\"\n                type=\"file\"\n                onChange={(e) => {\n                  props.setFieldValue(\"abstract\", e.target.files[0]);\n                }}\n              />\n            </div>\n            <div>\n              <FieldArray name=\"authors\">\n                {(fieldArrayProps) => {\n                  const { push, remove, form } = fieldArrayProps;\n                  const { values } = form;\n                  const { authors } = values;\n                  return (\n                    <>\n                      {authors && authors.length > 0 ? (\n                        <ul className=\"list-group\">\n                          {authors.map((author, index) => (\n                            <li\n                              className=\"list-group-item border-2 mb-2\"\n                              key={index}\n                            >\n                              {authors.length > 1 && (\n                                <Badge index={index} text={\"author\"} />\n                              )}\n                              <CustomInput\n                                type=\"text\"\n                                label=\"Author\"\n                                name={`authors.${index}`}\n                                bsclass=\"mb-3\"\n                              />\n                              <div className=\"text-end\">\n                                <div className=\"btn-group\" role=\"group\">\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-outline-primary\"\n                                    onClick={() => remove(index)} // remove a friend from the list\n                                  >\n                                    remove the author\n                                  </button>\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-outline-primary\"\n                                    onClick={() => push(\"\")}\n                                  >\n                                    add an author\n                                  </button>\n                                </div>\n                              </div>\n                            </li>\n                          ))}\n                        </ul>\n                      ) : (\n                        <div className=\"text-end\">\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-sm btn-outline-primary\"\n                            onClick={() => push(\"\")}\n                          >\n                            Add an author\n                          </button>\n                        </div>\n                      )}\n                    </>\n                  );\n                }}\n              </FieldArray>\n            </div>\n            <div className=\"text-end mt-3\">\n              <div className=\"btn-group\">\n                <BackBtn path={`/periods/${period_id}/publications`}>\n                  Cancel\n                </BackBtn>\n                <SubmitBtn text={submitBtnText} disabled={isDisabled} />\n              </div>\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default PublicationForm;\n","import { useEffect } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectPublications } from \"../redux/publications/selectorPublications\";\nimport { selectPeriods } from \"../redux/publicationPeriods/selectorPublicationPeriods\";\n\nimport Alert from \"../components/shared/Alert\";\nimport { useAlert } from \"../assets/customHooks/useAlert\";\n\nimport FormTitle from \"../components/FormComponents/FormTitle\";\nimport FormRequirements from \"../components/FormComponents/FormRequirements\";\nimport PublicationForm from \"../components/Publications/PublicationForm\";\nimport Section from \"../components/shared/Section\";\n\nimport getCurrentPeriod from \"../assets/utils/getCurrentEntity\";\n\nconst requirementsList = [\n  \"Publication year\",\n  \"Sequence number\",\n  \"Publication title\",\n  \"Source\",\n  \"SourceURL\",\n  \"Author ( at least one )\",\n  \"Attachment ( required at least one, cover or abstract )\",\n];\n\nconst PublicationOperationsPage = ({ edit }) => {\n  const { alert, showAlert } = useAlert();\n\n  const { publications, error, status } = useSelector(selectPublications);\n  const { periods } = useSelector(selectPeriods);\n\n  const { period_id, publication_id } = useParams();\n  const currentPeriodId = parseInt(period_id);\n  const currentPublicationId = parseInt(publication_id);\n  const currentPeriod = getCurrentPeriod(periods, currentPeriodId);\n\n  const title = edit\n    ? `Edit publication [period: ${currentPeriod.title}]`\n    : `Create publication [period: ${currentPeriod.title}]`;\n  let publication = null;\n\n  if (edit) {\n    publication = publications.find(\n      (publication) =>\n        publication.publication_period_id === currentPeriodId &&\n        publication.id === currentPublicationId\n    );\n  }\n\n  useEffect(() => {\n    if (status === \"rejected\") {\n      showAlert(error, \"danger\");\n      return;\n    }\n    if (status === \"fulfilled\") {\n      const text = edit\n        ? \"Publication updated successfully\"\n        : \"Publication created successfully\";\n      showAlert(text, \"success\");\n      return;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [status]);\n\n  return (\n    <Section>\n      <Alert state={alert} />\n      <FormTitle>{title}</FormTitle>\n      <FormRequirements requirementsList={requirementsList} />\n      <PublicationForm\n        publication={edit ? publication : null}\n        status={status}\n      />\n    </Section>\n  );\n};\n\nexport default PublicationOperationsPage;\n","export const selectPublications = (state) => state.publications;\n"],"names":["_ref","requirementsList","_jsxs","className","children","_jsx","map","requirement","index","path","navigate","useNavigate","type","onClick","text","concat","label","items","props","_objectWithoutProperties","_excluded","_useField","useField","name","_useField2","_slicedToArray","field","meta","_objectSpread","defaultValue","item","value","touched","error","FormWarning","array","id","find","entity","period","_period$title$split","title","split","_period$title$split2","start","end","till","Date","getFullYear","years","i","push","toString","publication","status","dispatch","useDispatch","period_id","useParams","periods","useSelector","selectPeriods","currentPeriodId","parseInt","currentPeriod","getCurrentPeriod","periodYears","getYearsArray","length","isNewItem","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","actions","year","sequence_number","source_url","source","cover","abstract","authors","formData","wrap","_context","prev","next","FormData","append","trim","forEach","addPublicationThunk","resetForm","updatePublicationThunk","publication_id","window","scrollTo","top","behavior","stop","_x","_x2","apply","arguments","Formik","initialValues","validationSchema","validation","publicationSchema","onSubmit","isDisabled","isSubmitting","submitBtnText","Form","CustomSelect","CustomInput","bsclass","autoFocus","htmlFor","onChange","e","setFieldValue","target","files","FieldArray","fieldArrayProps","remove","form","_Fragment","author","Badge","role","BackBtn","SubmitBtn","disabled","edit","_useAlert","useAlert","alert","showAlert","_useSelector","selectPublications","publications","_useParams","currentPublicationId","publication_period_id","useEffect","Section","Alert","state","FormTitle","FormRequirements","PublicationForm"],"sourceRoot":""}